# shortcut to an executable
tosr:
  do: exec
  desc: run hpc.sh
  command: ~/git/private/my-rsync/hpc.sh <<flags>>

gitit:serve:
  do: exec
  desc: find gitit's conf file and serve it
  command: dir="$(find -name _default.conf -exec dirname {} +)"; subdir="$(basename "$dir")"; cd "$dir/.." && gitit -f "$subdir/_default.conf"

routine:
  do: exec
  desc: perform routine update on git repos
  command: |
    (
      cd ~/git && s r git:batch 2 1
      cd ~/.sman && git pull
      zprezto-update
      [[ "$__HOST" == gordita ]] && {rsync -av --stats ~/git/private/ssh-dir/.ssh/ ~/.ssh/; chmod 700 ~/.ssh && cd ~/.ssh && chmod 600 *}
      [[ "$__HOST" == bolo ]] && s r bolo2github
      [[ -n "$NERSC_HOST" ]] && cd ~/git/fork/NERSC-MFA && s r merge:upstream upstream master && git push
    )

# cleanup
clean:all:
  do: exec
  desc: clean all common auxiliary files
  command: s r dss 2; s r conflict 2; s r ipycp; s r fd:rm:py:aux

pandoc:cleanup:md:
  do: exec
  desc: cleanup markdown files using pandoc
  command: pandoc -s -o '<<filename>>' '<<filename>>' -f markdown+abbreviations+autolink_bare_uris+markdown_attribute+mmd_header_identifiers+mmd_link_attributes+mmd_title_block+tex_math_double_backslash-latex_macros -t markdown+raw_tex-native_spans-simple_tables-multiline_tables-grid_tables-latex_macros -s --wrap=none --column=999 --atx-headers --reference-location=block --file-scope

minify:
  do: exec
  desc: minify (written in go)
  command: minify --html-keep-document-tags --html-keep-end-tags --type=html -o <<filename>> <<filename>>

# videos

ffmpeg:lut:
  do: exec
  desc: ffmpeg to apply LUT and normalize audio
  command: ffmpeg -i <<input>> -filter:v lut3d=<<LUT>> -filter:a loudnorm <<output>>

ffmpeg:nb_frames:
  do: exec
  desc: use ffprobe to find total no. of frames
  command: ffprobe -select_streams v -show_streams "<<file>>" 2> /dev/null | grep nb_frames

ffmpeg:extract:frame:
  do: exec
  desc: use ffmpeg to extract one frame
  command: ffmpeg -ss <<timecode>> -i <<input>> -frames:v 1 <<output>>

mediainfo:count:
  do: exec
  desc: count no. of frames using mediainfo
  command: |
    mediainfo --fullscan "<<file>>" | grep "Frame count"

# f3 - Fight Flash Fraud
f3:check:
  do: exec
  desc: use f3 to check memory cards
  command: f3probe --destructive --time-ops <<disk>>
f3:io:
  do: exec
  desc: use f3 to perform full read write cycle test
  command: f3write <<diskMount>> && f3read <<diskMount>>

prevent:spotlight:
  do: exec
  desc: 'do not allow macOS to index current directory. Hint: cd to external drive directory first.'
  command: touch .metadata_never_index

prevent:dss:
  do: exec
  desc: prevent macOS generating .DS_Store on network drives
  command: defaults write com.apple.desktopservices DSDontWriteNetworkStores true

youtube-dl:
  do: exec
  command: youtube-dl --write-sub --all-subs --embed-subs "<<url>>" -o "<<filename>>.%(ext)s"
